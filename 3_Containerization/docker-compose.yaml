version: "3.8"
services:
  # Database server
  mysql:
    image: mysql:8.0
    container_name: mysql
    env_file:
      - .env
    volumes:
       - mysql:/var/lib/mysql
    networks:
      - dbnerwork
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      interval: 5s
      timeout: 5s
      retries: 5
    logging:
      driver: none

  # Server A - is able to connect to the database and Server B
  servera:
    container_name: servera
    build:
      context: .
      dockerfile: dockerfiles/debian.dockerfile
    stdin_open: true
    tty: true 
    networks:
      - dbnerwork
      - servicenetwork
    depends_on:
      mysql:
        condition: service_healthy
    
    # Checks whether the database is available
    command: 
      - /bin/bash
      - -c 
      - |
        ping -c 1 mysql &> /dev/null && echo Server A is connected to Database! || echo Failed connecting to Database!
        tail -f /dev/null

    healthcheck:
      test: ["CMD-SHELL", "mysql -h mysql -uroot -p${MYSQL_ROOT_PASSWORD} ${MYSQL_DATABASE}; exit || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Server B - is able to connect to the Server A and is able 
  #  to return "Hello World" to localhost:3000
  serverb:
    container_name: serverb
    # image: nginx:stable-alpine
    build:
      context: .
      dockerfile: dockerfiles/nginx.dockerfile

    ports: 
      - 3001:80
    # Open bind mound for "index.html" 
    volumes:
      - ./src:/usr/share/nginx/html
    networks:
      - servicenetwork
    depends_on:
      servera:
        condition: service_healthy
 
# dbnerwork - is used to connect Database server and Server A
# servicenetwork - is used to connect Server A and Server B
networks:
  dbnerwork:
  servicenetwork:

# Just keeping create volumes for database as I'm used to :)
volumes:
  mysql: